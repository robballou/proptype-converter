// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixture 001: basic 1`] = `
[
  "type MyComponentProps = {
	className: string;
}",
]
`;

exports[`fixture 002: simple PropTypes only 1`] = `
[
  "type MyComponentProps = {
	className: string;
	something?: boolean;
	children?: React.ReactNode;
}",
]
`;

exports[`fixture 003: a PropType we cannot map 1`] = `
[
  "type MyComponentProps = {
	custom: unknown; // Could not process this property
}",
]
`;

exports[`fixture 004: oneOf 1`] = `
[
  "type MyComponentProps = {
	custom?: 'test' | 'thing';
	requiredThing: 0 | 1 | 2 | 3 | 4 | 5;
}",
]
`;

exports[`fixture 005: shape 1`] = `
[
  "type MyComponentProps = {
	someObject?: {
		key?: string;
	};
	requiredProp: {
		key?: string;
	};
}",
]
`;

exports[`fixture 006: shape array 1`] = `
[
  "type MyComponentProps = {
	someObject?: {
		key?: string;
	}[];
}",
]
`;

exports[`fixture 006: shape array 2`] = `"{ someObject, }"`;

exports[`fixture 007: jsdoc 1`] = `"{ className, }"`;

exports[`fixture 008: defaultProps 1`] = `
[
  "type MyComponentProps = {
	className: string;
	optional?: string;
	optionalFlag?: boolean;
}",
]
`;

exports[`fixture 008: defaultProps 2`] = `"{ className, optional = 'default', optionalFlag = true, }"`;

exports[`fixture 009: function expression defaultProps 1`] = `
[
  "type MyComponentProps = {
	className: string;
	optional?: string;
	optionalFlag?: boolean;
}",
]
`;

exports[`fixture 009: function expression defaultProps 2`] = `"{ className, optional = 'default', optionalFlag = true, }"`;

exports[`fixture 010: function expression defaultProps 1`] = `
[
  "type MyComponentProps = {
	className: string;
	item: {
		numberProp?: number;
		boolProp?: boolean;
		expireDate?: Date;
		folders?: {
			id?: string;
			name?: string;
		}[];
		isSelected: unknown; // could not parse
		reviewStatus?: 'APPROVED' | 'PENDING' | 'REJECTED' | null;
	};
	onDrag?: CallableFunction;
}",
]
`;

exports[`fixture 010: function expression defaultProps 2`] = `"{ className, item, onDrag = () => { }, }"`;

exports[`fixture 011: component arguments contain a prop not in propTypes/defaultProps 1`] = `
[
  "type MyComponentProps = {
	className: string;
	optional?: string;
	optionalFlag?: boolean;
	notInPropTypes: unknown; // Could not process this property
	anotherWithDefault: unknown; // Could not process this property
}",
]
`;

exports[`fixture 011: component arguments contain a prop not in propTypes/defaultProps 2`] = `"{ anotherWithDefault, className, notInPropTypes, optional = 'default', optionalFlag = true, }"`;

exports[`fixture 012: arrow component arguments contain a prop not in propTypes/defaultProps 1`] = `
[
  "type MyComponentProps = {
	className: string;
	optional?: string;
	optionalFlag?: boolean;
	notInPropTypes: unknown; // Could not process this property
	anotherWithDefault: unknown; // Could not process this property
}",
]
`;

exports[`fixture 012: arrow component arguments contain a prop not in propTypes/defaultProps 2`] = `"{ anotherWithDefault, className, notInPropTypes, optional = 'default', optionalFlag = true, }"`;

exports[`fixture 013: defaultProps 1`] = `
[
  "type MyComponentProps = {
	/** JSDoc we want to keep */
	className: string;
	/**
	 * A bigger JSDoc comment
	 *
	 * See more details...
	 */
	optional?: string;
	optionalFlag?: boolean;
}",
]
`;

exports[`fixture 013: defaultProps 2`] = `"{ className, optional = 'default', optionalFlag = true, }"`;
